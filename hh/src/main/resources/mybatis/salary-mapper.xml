<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salary">
		
		<select id="selectAllPayroll" parameterType="int" resultType="payrollDto">
			SELECT *
            FROM PAYROLL_PAYSLIP, EMP
            WHERE PAYROLL_PAYSLIP.EMP_NO = EMP.EMP_NO
		</select>
		
		<select id="selectAllPayrollByEmpNo" resultType="payrollDto">
			SELECT
			PAYROLL_PAYSLIP.EMP_NO AS empNo,
			PAYROLL_NO,
			TO_CHAR(BASIC_SALARY, '999,999,999') AS BASIC_SALARY,
			TO_CHAR(OVERTIME_ALLOWANCE, '999,999,999') AS OVERTIME_ALLOWANCE,
			TO_CHAR(HOLIDAY_ALLOWANCE, '999,999,999') AS HOLIDAY_ALLOWANCE,
			TO_CHAR(ANNUAL_LEAVE_ALLOWANCE, '999,999,999') AS ANNUAL_LEAVE_ALLOWANCE,
			TO_CHAR(MEAL_EXPENSES, '999,999,999') AS MEAL_EXPENSES,
			TO_CHAR(TRANSPORTATION_EXPENSES, '999,999,999') AS TRANSPORTATION_EXPENSES,
			TO_CHAR(BONUS, '999,999,999') AS BONUS,
			TO_CHAR(SPECIAL_ALLOWANCE, '999,999,999') AS SPECIAL_ALLOWANCE,
			TO_CHAR(EMPLOYMENT_INSURANCE, '999,999,999') AS EMPLOYMENT_INSURANCE,
			TO_CHAR(HEALTH_INSURANCE, '999,999,999') AS HEALTH_INSURANCE,
			TO_CHAR(NATIONAL_PENSION, '999,999,999') AS NATIONAL_PENSION,
			TO_CHAR(TAX, '999,999,999') AS TAX,
			TO_CHAR(LOCAL_INCOME_TAX, '999,999,999') AS LOCAL_INCOME_TAX,
			PAYROLL_BANK,
			PAYROLL_ACCOUNT,
			PAYROLL_DATE,
			
			TO_CHAR((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE), '999,999,999') AS totalSalary ,
			
			TO_CHAR(((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE) -
			(EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX)), '999,999,999') AS netSalary ,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX), '999,999,999') AS ehntl ,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION), '999,999,999') AS fourMajorInsurances ,
			
			EMP_NAME,
			JOB_NAME,
			EMP_ENROLLDATE
			
			FROM PAYROLL_PAYSLIP, EMP, JOB
            WHERE PAYROLL_PAYSLIP.EMP_NO = EMP.EMP_NO AND EMP.EMP_NO = JOB.EMP_NO
            AND PAYROLL_PAYSLIP.EMP_NO = #{empNo}
		</select>
		
		<select id="selectOneByPayroll" parameterType="string" resultType="payrollDto">
			SELECT
			PAYROLL_PAYSLIP.EMP_NO AS empNo,
			PAYROLL_NO,
			TO_CHAR(BASIC_SALARY, '999,999,999') AS BASIC_SALARY,
			TO_CHAR(OVERTIME_ALLOWANCE, '999,999,999') AS OVERTIME_ALLOWANCE,
			TO_CHAR(HOLIDAY_ALLOWANCE, '999,999,999') AS HOLIDAY_ALLOWANCE,
			TO_CHAR(ANNUAL_LEAVE_ALLOWANCE, '999,999,999') AS ANNUAL_LEAVE_ALLOWANCE,
			TO_CHAR(MEAL_EXPENSES, '999,999,999') AS MEAL_EXPENSES,
			TO_CHAR(TRANSPORTATION_EXPENSES, '999,999,999') AS TRANSPORTATION_EXPENSES,
			TO_CHAR(BONUS, '999,999,999') AS BONUS,
			TO_CHAR(SPECIAL_ALLOWANCE, '999,999,999') AS SPECIAL_ALLOWANCE,
			TO_CHAR(EMPLOYMENT_INSURANCE, '999,999,999') AS EMPLOYMENT_INSURANCE,
			TO_CHAR(HEALTH_INSURANCE, '999,999,999') AS HEALTH_INSURANCE,
			TO_CHAR(NATIONAL_PENSION, '999,999,999') AS NATIONAL_PENSION,
			TO_CHAR(TAX, '999,999,999') AS TAX,
			TO_CHAR(LOCAL_INCOME_TAX, '999,999,999') AS LOCAL_INCOME_TAX,
			PAYROLL_BANK,
			PAYROLL_ACCOUNT,
			PAYROLL_DATE,
			
			TO_CHAR((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE), '999,999,999') AS totalSalary ,
			
			TO_CHAR(((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE) -
			(EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX)), '999,999,999') AS netSalary ,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX), '999,999,999') AS ehntl ,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION), '999,999,999') AS fourMajorInsurances ,
			
			EMP_NAME,
			JOB_NAME,
			DEPT_NAME,
			EMP_ENROLLDATE
			
			FROM PAYROLL_PAYSLIP, EMP, DEPT, JOB
			WHERE PAYROLL_PAYSLIP.EMP_NO = EMP.EMP_NO AND EMP.EMP_NO = DEPT.EMP_NO AND EMP.EMP_NO = JOB.EMP_NO
			AND PAYROLL_PAYSLIP.PAYROLL_NO = #{payrollNo}
		</select>
		
		
		
		
		
		<select id="selectOneBySalary" resultType="salaryDto">
				SELECT *
				FROM SALARY
	            WHERE EMP_NO = 1
		</select>
		

	
		
		<update id="setting" parameterType="salaryDto">
			UPDATE SALARY
			SET 
			  REGULAR_HOURLY_WAGE = #{regularHourlyWage}
			, LONG_SERVICE_DAY = #{longServiceDay}
			, LONG_SERVICE_ALLOWANCE = #{longServiceAllowance}
			, MEAL_EXPENSES = #{mealExpenses}
			, TRANSPORTATION_EXPENSES = #{transportationExpenses}
		</update>

		<!-- <delete id="delete" parameterType="payrollDto">
			DELETE FROM PAYROLL
			WHERE PAYROLL_DATE = #{payrollDate}
		</delete> -->
		
		
		
		<select id="selectOneByEmp" parameterType="string" resultType="payrollDto">
		SELECT
			EMP_NO,
			PAYROLL_NO,
			BASIC_SALARY,
			OVERTIME_ALLOWANCE,
			HOLIDAY_ALLOWANCE,
			ANNUAL_LEAVE_ALLOWANCE,
			MEAL_EXPENSES,
			TRANSPORTATION_EXPENSES,
			BONUS,
			SPECIAL_ALLOWANCE,
			EMPLOYMENT_INSURANCE,
			HEALTH_INSURANCE,
			NATIONAL_PENSION,
			TAX,
			LOCAL_INCOME_TAX,
			PAYROLL_BANK,
			PAYROLL_ACCOUNT,
			PAYROLL_DATE,
			
			(BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE) AS totalSalary ,
			
			((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE) -
			(EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX)) AS netSalary ,
			
			(EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX) AS ehntl ,
			
			(EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION) AS fourMajorInsurances
			
			FROM PAYROLL_PAYSLIP
			WHERE EMP_NO = #{empNo}
		</select>

		<select id="selectEmail" parameterType="string" resultType="emailDto">
			SELECT 
			PAYROLL_PAYSLIP.EMP_NO AS PEN,
			TO_CHAR(PAYROLL_PAYSLIP.BASIC_SALARY, '999,999,999') AS PBS,
			
			TO_CHAR((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE), '999,999,999') AS PTS,
			
			TO_CHAR(((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE) -
			(EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX)), '999,999,999') AS PNS,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX), '999,999,999') AS ehntl,
			
			PAYROLL_PAYSLIP.PAYROLL_BANK AS PPB,
			PAYROLL_PAYSLIP.PAYROLL_ACCOUNT AS PPA,
			PAYROLL_PAYSLIP.PAYROLL_DATE AS PPD,
			EMP.EMP_NO AS EEN,
			EMP.EMP_NAME AS EENAME,
			EMP.EMP_EMAIL AS EEE,
			JOB.JOB_NAME AS EEJ,
			DEPT.DEPT_NAME AS EMD
			FROM PAYROLL_PAYSLIP, EMP, DEPT, JOB
			WHERE PAYROLL_PAYSLIP.EMP_NO = EMP.EMP_NO AND DEPT.EMP_NO = EMP.EMP_NO AND EMP.EMP_NO = JOB.EMP_NO
			ORDER BY PPD DESC
		</select>
		
		<select id="searchPayslip" resultType="payrollDto">
			SELECT
			EMP_NO,
			PAYROLL_NO,
			TO_CHAR(BASIC_SALARY, '999,999,999') AS BASIC_SALARY,
			TO_CHAR(OVERTIME_ALLOWANCE, '999,999,999') AS OVERTIME_ALLOWANCE,
			TO_CHAR(HOLIDAY_ALLOWANCE, '999,999,999') AS HOLIDAY_ALLOWANCE,
			TO_CHAR(ANNUAL_LEAVE_ALLOWANCE, '999,999,999') AS ANNUAL_LEAVE_ALLOWANCE,
			TO_CHAR(MEAL_EXPENSES, '999,999,999') AS MEAL_EXPENSES,
			TO_CHAR(TRANSPORTATION_EXPENSES, '999,999,999') AS TRANSPORTATION_EXPENSES,
			TO_CHAR(BONUS, '999,999,999') AS BONUS,
			TO_CHAR(SPECIAL_ALLOWANCE, '999,999,999') AS SPECIAL_ALLOWANCE,
			TO_CHAR(EMPLOYMENT_INSURANCE, '999,999,999') AS EMPLOYMENT_INSURANCE,
			TO_CHAR(HEALTH_INSURANCE, '999,999,999') AS HEALTH_INSURANCE,
			TO_CHAR(NATIONAL_PENSION, '999,999,999') AS NATIONAL_PENSION,
			TO_CHAR(TAX, '999,999,999') AS TAX,
			TO_CHAR(LOCAL_INCOME_TAX, '999,999,999') AS LOCAL_INCOME_TAX,
			PAYROLL_BANK,
			PAYROLL_ACCOUNT,
			PAYROLL_DATE,
			
			TO_CHAR((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE), '999,999,999') AS totalSalary ,
			
			TO_CHAR(((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE) -
			(EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX)), '999,999,999') AS netSalary ,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX), '999,999,999') AS ehntl ,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION), '999,999,999') AS fourMajorInsurances
			
			FROM PAYROLL_PAYSLIP
			WHERE EMP_NO = #{empNo}
			AND PAYROLL_DATE LIKE '#{payrollDate}'
		</select>
		
		
		
		
		








		<!-- 모든 사원 조회 -->
		<select id="selectAllEmpPayroll" resultType="inputDto">
			SELECT
				EMP.EMP_NO AS empNo,
				PAYROLL_NO,
				BASIC_SALARY,
				OVERTIME_ALLOWANCE,
				HOLIDAY_ALLOWANCE,
				ANNUAL_LEAVE_ALLOWANCE,
				PAYROLL.MEAL_EXPENSES AS MEAL_EXPENSES,
				PAYROLL.TRANSPORTATION_EXPENSES AS TRANSPORTATION_EXPENSES,
				BONUS,
				SPECIAL_ALLOWANCE,
				EMPLOYMENT_INSURANCE,
				HEALTH_INSURANCE,
				NATIONAL_PENSION,
				TAX,
				LOCAL_INCOME_TAX,
				PAYROLL.PAYROLL_BANK AS PAYROLL_BANK,
				PAYROLL.PAYROLL_ACCOUNT AS PAYROLL_ACCOUNT,
				PAYROLL_DATE,
				
				(BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) AS totalSalary ,
				
				((BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) -
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION +
				TAX +
				LOCAL_INCOME_TAX)) AS netSalary ,
				
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION +
				TAX +
				LOCAL_INCOME_TAX) AS ehntl ,
				
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION) AS fourMajorInsurances ,
				
				EMP_NAME,
				JOB_NAME,
				DEPT_NAME,
				
				SALARY.REGULAR_HOURLY_WAGE AS REGULAR_HOURLY_WAGE_S,
				SALARY.LONG_SERVICE_DAY AS LONG_SERVICE_DAY_S,
				SALARY.LONG_SERVICE_ALLOWANCE AS LONG_SERVICE_ALLOWANCE_S,
				SALARY.MEAL_EXPENSES AS MEAL_EXPENSES_S,
				SALARY.TRANSPORTATION_EXPENSES AS TRANSPORTATION_EXPENSES_S,
				SALARY.PAYROLL_BANK AS PAYROLL_BANK_S,
				SALARY.PAYROLL_ACCOUNT AS PAYROLL_ACCOUNT_S
				
			FROM EMP, DEPT, PAYROLL, SALARY, JOB
			WHERE EMP.EMP_NO = DEPT.EMP_NO AND EMP.EMP_NO = PAYROLL.EMP_NO AND EMP.EMP_NO = SALARY.EMP_NO
				  AND EMP.EMP_NO = JOB.EMP_NO
		</select>
		
		<!-- Input 사원 한명의 Payroll 조회 -->
		<select id="selectOneByEmpPayroll" resultType="inputDto">
			SELECT
				PAYROLL.EMP_NO AS empNo,
				PAYROLL_NO,
				BASIC_SALARY,
				OVERTIME_ALLOWANCE,
				HOLIDAY_ALLOWANCE,
				(SALARY.REGULAR_HOURLY_WAGE * 0<!-- 미사용연차 -->) AS ANNUAL_LEAVE_ALLOWANCE,
				(SALARY.MEAL_EXPENSES * 20<!-- 근무일수 -->) AS MEAL_EXPENSES,
				(SALARY.TRANSPORTATION_EXPENSES * 20<!-- 근무일수 -->) AS TRANSPORTATION_EXPENSES,
				BONUS,
				SPECIAL_ALLOWANCE,
				
				TRUNC((BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) * 0.008, -1) AS EMPLOYMENT_INSURANCE,
				TRUNC((BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) * 0.03495, -1) AS HEALTH_INSURANCE,
				TRUNC((BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) * 0.045, -1) AS NATIONAL_PENSION,
				
				TRUNC((BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) * 0.01, -1) AS TAX,
				TRUNC(((BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) * 0.01) * 0.1, -1) AS LOCAL_INCOME_TAX,
				
				PAYROLL.PAYROLL_BANK AS PAYROLL_BANK,
				PAYROLL.PAYROLL_ACCOUNT AS PAYROLL_ACCOUNT,
				PAYROLL_DATE,
				
				(BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) AS totalSalary ,
				
				((BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) -
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION +
				TAX +
				LOCAL_INCOME_TAX)) AS netSalary ,
				
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION +
				TAX +
				LOCAL_INCOME_TAX) AS ehntl ,
				
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION) AS fourMajorInsurances ,
				
				EMP_NAME,
				JOB_NAME,
				DEPT_NAME,
				
				SALARY.REGULAR_HOURLY_WAGE AS REGULAR_HOURLY_WAGE_S,
				(SALARY.REGULAR_HOURLY_WAGE * 8 * 20<!-- 근무시간 -->) * 1.2 AS BASIC_SALARY_S,
				(SALARY.REGULAR_HOURLY_WAGE * 0<!-- 추가근무시간 -->) * 1.5 AS OVERTIME_ALLOWANCE_S,
				(SALARY.REGULAR_HOURLY_WAGE * 0<!-- 휴일근무시간 -->) * 1.5 AS HOLIDAY_ALLOWANCE_S,
				SALARY.LONG_SERVICE_DAY AS LONG_SERVICE_DAY_S,
				SALARY.LONG_SERVICE_ALLOWANCE AS LONG_SERVICE_ALLOWANCE_S,
				SALARY.MEAL_EXPENSES AS MEAL_EXPENSES_S,
				SALARY.TRANSPORTATION_EXPENSES AS TRANSPORTATION_EXPENSES_S,
				SALARY.PAYROLL_BANK AS PAYROLL_BANK_S,
				SALARY.PAYROLL_ACCOUNT AS PAYROLL_ACCOUNT_S
				
			FROM EMP, DEPT, PAYROLL, SALARY, JOB
			WHERE EMP.EMP_NO = DEPT.EMP_NO AND EMP.EMP_NO = PAYROLL.EMP_NO AND EMP.EMP_NO = SALARY.EMP_NO
			  AND EMP.EMP_NO = JOB.EMP_NO AND PAYROLL.PAYROLL_NO = #{payrollNo}
		</select>
		
		<!-- Payroll 추가 -->
		<insert id="insertPayroll">
			INSERT INTO PAYROLL_PAYSLIP (
				EMP_NO,
				PAYROLL_NO,
				BASIC_SALARY,
				OVERTIME_ALLOWANCE,
				HOLIDAY_ALLOWANCE,
				ANNUAL_LEAVE_ALLOWANCE,
				MEAL_EXPENSES,
				TRANSPORTATION_EXPENSES,
				BONUS,
				SPECIAL_ALLOWANCE,
				EMPLOYMENT_INSURANCE,
				HEALTH_INSURANCE,
				NATIONAL_PENSION,
				TAX,
				LOCAL_INCOME_TAX,
				PAYROLL_BANK,
				PAYROLL_ACCOUNT,
				PAYROLL_DATE
			)
			VALUES
			(
				  #{empNo}
				, PAYROLL_NO_SEQ.NEXTVAL
				, #{basicSalary}
				, #{overtimeAllowance}
				, #{holidayAllowance}
				, #{annualLeaveAllowance}
				, #{mealExpenses}
				, #{transportationExpenses}
				, #{bonus}
				, #{specialAllowance}
		
				<!-- #{employmentInsurance} -->
				, TRUNC((#{basicSalary} +
				#{overtimeAllowance} +
				#{holidayAllowance} +
				#{annualLeaveAllowance} +
				#{mealExpenses} +
				#{transportationExpenses} +
				#{bonus} +
				#{specialAllowance}) * 0.008, -1)
		
				<!-- #{healthInsurance} -->
				, TRUNC((#{basicSalary} +
				#{overtimeAllowance} +
				#{holidayAllowance} +
				#{annualLeaveAllowance} +
				#{mealExpenses} +
				#{transportationExpenses} +
				#{bonus} +
				#{specialAllowance}) * 0.03495, -1)
				
				<!-- #{nationalPension} -->
				, TRUNC((#{basicSalary} +
				#{overtimeAllowance} +
				#{holidayAllowance} +
				#{annualLeaveAllowance} +
				#{mealExpenses} +
				#{transportationExpenses} +
				#{bonus} +
				#{specialAllowance}) * 0.045, -1)
				
				<!-- #{tax} -->
				, TRUNC((#{basicSalary} +
				#{overtimeAllowance} +
				#{holidayAllowance} +
				#{annualLeaveAllowance} +
				#{mealExpenses} +
				#{transportationExpenses} +
				#{bonus} +
				#{specialAllowance}) * 0.01, -1)

				<!-- #{localIncomeTax} -->
				, TRUNC(((#{basicSalary} +
				#{overtimeAllowance} +
				#{holidayAllowance} +
				#{annualLeaveAllowance} +
				#{mealExpenses} +
				#{transportationExpenses} +
				#{bonus} +
				#{specialAllowance}) * 0.01) * 0.1, -1)
			
				, #{payrollBank}
				, #{payrollAccount}
				, SYSDATE
			)
		</insert>
		
		<update id="settingInput">
			UPDATE PAYROLL
			SET 
			  	EMP_NO = #{empNo},
				PAYROLL_NO = PAYROLL_NO_SEQ.NEXTVAL,
				BASIC_SALARY = #{basicSalary},
				OVERTIME_ALLOWANCE = #{overtimeAllowance},
				HOLIDAY_ALLOWANCE = #{holidayAllowance},
				ANNUAL_LEAVE_ALLOWANCE = #{annualLeaveAllowance},
				MEAL_EXPENSES = #{mealExpenses},
				TRANSPORTATION_EXPENSES = #{transportationExpenses},
				BONUS = 0,
				SPECIAL_ALLOWANCE = 0,
				EMPLOYMENT_INSURANCE = #{employmentInsurance},
				HEALTH_INSURANCE = #{healthInsurance},
				NATIONAL_PENSION = #{nationalPension},
				TAX = #{tax},
				LOCAL_INCOME_TAX = #{localIncomeTax},
				PAYROLL_BANK = #{payrollBank},
				PAYROLL_ACCOUNT = #{payrollAccount},
				PAYROLL_DATE = SYSDATE
			WHERE EMP_NO = #{empNo}
		</update>
		
		<select id="searchEmpList" resultType="inputDto">
			SELECT
				EMP.EMP_NO AS empNo,
				PAYROLL_NO,
				BASIC_SALARY,
				OVERTIME_ALLOWANCE,
				HOLIDAY_ALLOWANCE,
				ANNUAL_LEAVE_ALLOWANCE,
				PAYROLL.MEAL_EXPENSES AS MEAL_EXPENSES,
				PAYROLL.TRANSPORTATION_EXPENSES AS TRANSPORTATION_EXPENSES,
				BONUS,
				SPECIAL_ALLOWANCE,
				EMPLOYMENT_INSURANCE,
				HEALTH_INSURANCE,
				NATIONAL_PENSION,
				TAX,
				LOCAL_INCOME_TAX,
				PAYROLL.PAYROLL_BANK AS PAYROLL_BANK,
				PAYROLL.PAYROLL_ACCOUNT AS PAYROLL_ACCOUNT,
				PAYROLL_DATE,
				
				(BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) AS totalSalary ,
				
				((BASIC_SALARY +
				OVERTIME_ALLOWANCE +
				HOLIDAY_ALLOWANCE +
				ANNUAL_LEAVE_ALLOWANCE +
				PAYROLL.MEAL_EXPENSES +
				PAYROLL.TRANSPORTATION_EXPENSES +
				BONUS +
				SPECIAL_ALLOWANCE) -
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION +
				TAX +
				LOCAL_INCOME_TAX)) AS netSalary ,
				
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION +
				TAX +
				LOCAL_INCOME_TAX) AS ehntl ,
				
				(EMPLOYMENT_INSURANCE +
				HEALTH_INSURANCE +
				NATIONAL_PENSION) AS fourMajorInsurances ,
				
				EMP_NAME,
				JOB_NAME,
				DEPT_NAME,
				
				SALARY.REGULAR_HOURLY_WAGE AS REGULAR_HOURLY_WAGE_S,
				SALARY.LONG_SERVICE_DAY AS LONG_SERVICE_DAY_S,
				SALARY.LONG_SERVICE_ALLOWANCE AS LONG_SERVICE_ALLOWANCE_S,
				SALARY.MEAL_EXPENSES AS MEAL_EXPENSES_S,
				SALARY.TRANSPORTATION_EXPENSES AS TRANSPORTATION_EXPENSES_S,
				SALARY.PAYROLL_BANK AS PAYROLL_BANK_S,
				SALARY.PAYROLL_ACCOUNT AS PAYROLL_ACCOUNT_S
				
			FROM EMP, DEPT, PAYROLL, SALARY, JOB
			WHERE EMP.EMP_NO = DEPT.EMP_NO AND EMP.EMP_NO = PAYROLL.EMP_NO AND EMP.EMP_NO = SALARY.EMP_NO
				  AND EMP.EMP_NO = JOB.EMP_NO
				  
				  AND
				  
				  <choose>
		            <when test="searchType == 'empNo'">
		                EMP.EMP_NO = #{searchValue}
		            </when>
		            <when test="searchType eq 'empName'">
		            <!-- <bind name="vvv" value="'%' + searchValue + '%'"/> -->
		                EMP.EMP_NAME like '%${searchValue}%'
		            </when>
		            <when test="searchType eq 'jobName'">
		                JOB.JOB_NAME = #{searchValue}
		            </when>
		            <when test="searchType eq 'deptName'">
		                DEPT.DEPT_NAME like '%${searchValue}%'
		            </when>
		            <otherwise>
		                EMP.EMP_NO = 'XXX' 
		                AND EMP.EMP_NAME = 'XXX'
		            </otherwise>
		       	 </choose>
        
		</select>
		
		
		
		
		<select id="searchPayslipList" resultType="payrollDto">
			SELECT
			PAYROLL_PAYSLIP.EMP_NO AS empNo,
			PAYROLL_NO,
			TO_CHAR(BASIC_SALARY, '999,999,999') AS BASIC_SALARY,
			TO_CHAR(OVERTIME_ALLOWANCE, '999,999,999') AS OVERTIME_ALLOWANCE,
			TO_CHAR(HOLIDAY_ALLOWANCE, '999,999,999') AS HOLIDAY_ALLOWANCE,
			TO_CHAR(ANNUAL_LEAVE_ALLOWANCE, '999,999,999') AS ANNUAL_LEAVE_ALLOWANCE,
			TO_CHAR(MEAL_EXPENSES, '999,999,999') AS MEAL_EXPENSES,
			TO_CHAR(TRANSPORTATION_EXPENSES, '999,999,999') AS TRANSPORTATION_EXPENSES,
			TO_CHAR(BONUS, '999,999,999') AS BONUS,
			TO_CHAR(SPECIAL_ALLOWANCE, '999,999,999') AS SPECIAL_ALLOWANCE,
			TO_CHAR(EMPLOYMENT_INSURANCE, '999,999,999') AS EMPLOYMENT_INSURANCE,
			TO_CHAR(HEALTH_INSURANCE, '999,999,999') AS HEALTH_INSURANCE,
			TO_CHAR(NATIONAL_PENSION, '999,999,999') AS NATIONAL_PENSION,
			TO_CHAR(TAX, '999,999,999') AS TAX,
			TO_CHAR(LOCAL_INCOME_TAX, '999,999,999') AS LOCAL_INCOME_TAX,
			PAYROLL_BANK,
			PAYROLL_ACCOUNT,
			PAYROLL_DATE,
			
			TO_CHAR((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE), '999,999,999') AS totalSalary ,
			
			TO_CHAR(((BASIC_SALARY +
			OVERTIME_ALLOWANCE +
			HOLIDAY_ALLOWANCE +
			ANNUAL_LEAVE_ALLOWANCE +
			MEAL_EXPENSES +
			TRANSPORTATION_EXPENSES +
			BONUS +
			SPECIAL_ALLOWANCE) -
			(EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX)), '999,999,999') AS netSalary ,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION +
			TAX +
			LOCAL_INCOME_TAX), '999,999,999') AS ehntl ,
			
			TO_CHAR((EMPLOYMENT_INSURANCE +
			HEALTH_INSURANCE +
			NATIONAL_PENSION), '999,999,999') AS fourMajorInsurances ,
			
			EMP_NAME,
			JOB_NAME,
			DEPT_NAME,
			EMP_ENROLLDATE
			
			FROM PAYROLL_PAYSLIP, EMP, DEPT, JOB
			WHERE PAYROLL_PAYSLIP.EMP_NO = EMP.EMP_NO AND EMP.EMP_NO = DEPT.EMP_NO AND EMP.EMP_NO = JOB.EMP_NO
			
			AND PAYROLL_PAYSLIP.EMP_NO = #{empNo}
			AND PAYROLL_PAYSLIP.PAYROLL_DATE like '%${month}%'
		       	 
		</select>
	  



</mapper>