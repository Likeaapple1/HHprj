<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 엘리먼트에 namespace="인터페이스" 속성 추가 인터페이스 내부에 메소드명 정의가 되어 있어야 한다. 메소드명과 
	id="식별자"가 일치해야 한다. -->
<mapper namespace="com.hh.insa.EmployeeDao">

	<!-- SELECT 쿼리 등록은 <select> 엘리먼트 이용. id="식별자" 속성 추가시 인터페이스에 정의된 메소드 이름과 
		일치해야 하며, 호출 메소드명 역할을 하게 된다. resultType="자료형클래스" 속성 추가시 SELECT 쿼리 내부에 있는 컬럼명의 
		정보가 자료형 클래스의 멤버변수와 일치하는 경우 자동 매핑이 이루어진다. <select> 엘리먼트에 SELECT 쿼리 등록. 주의) 
		문장 끝에 ; 가 있으면 안된다. -->
	<select id="employeeList" resultType="com.hh.insa.EmployeeVo">
		SELECT employeeId, name, birthday, lunar, lunarName, telephone,
		departmentId, departmentName, positionId, positionName, regionId,
		regionName, basicPay, extraPay, pay, employeePicFileName, grade FROM
		employeeView e
		<if test="key==1"> WHERE employeeId=#{value}</if>
		<if test="key==2"> WHERE INSTR(LOWER(name),LOWER(#{value}))>0</if>
		<if test="key==3"> WHERE INSTR(LOWER(regionName),LOWER(#{value}))>0</if>
		<if test="key==4"> WHERE INSTR(LOWER(departmentName),LOWER(#{value}))>0</if>
		<if test="key==5"> WHERE INSTR(LOWER(positionName),LOWER(#{value}))>0</if>
		ORDER BY employeeId
	</select>

	<select id="totalCount" resultType="java.lang.Integer">
		SELECT count(*) AS count FROM
		employee
	</select>

	<insert id="employeeAdd">
		INSERT INTO employee
		(employeeId,name,ssn,birthday,lunar,telephone,departmentId,positionId,regionId,basicPay,extraPay)
		VALUES ((SELECT NVL(MAX(employeeId)+1, 1) FROM employee), #{name},
		encrypt(#{ssn}, #{name}) , #{birthday} , #{lunar}, #{telephone},
		#{departmentId}, #{positionId}, #{regionId}, #{basicPay},#{extraPay})
	</insert>

	<delete id="employeRemove">
		DELETE FROM employee WHERE employeeId = #{employeeId}
	</delete>

	<update id="employeeModify">
		UPDATE employee SET name=#{name},
		birthday=#{birthday},lunar=#{lunar},telephone=#{telephone},departmentId=#{departmentId},
		positionId=#{positionId},regionId=#{regionId},basicPay=#{basicPay},extraPay=#{extraPay}
		WHERE employeeId=#{employeeId}
	</update>

	<select id="pictureList" resultType="com.hh.insa.EmployeeVo">
		SELECT employeePicFileName
		FROM employeeView WHERE employeeId =
		#{employeeId}
	</select>

	<insert id="pictureAdd">
		INSERT INTO employeePicture (employeeId,
		employeePicFileName) VALUES(#{employeeId},#{employeePicFileName})
	</insert>

	<update id="pictureModify">
		UPDATE employeePicture SET
		employeePicFileName=#{employeePicFileName} WHERE
		employeeId=#{employeeId}
	</update>
</mapper>
